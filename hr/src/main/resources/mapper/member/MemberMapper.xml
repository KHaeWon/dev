<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.hr.member.repository.IMemberRepository">
	
	<!-- getMemberCount : 회원 수 조회 >> 회원 존재 유무 판단을 위해 추가 -->
	<select id="getMemberCount" parameterType="string" resultType="int">
	select count(*) from member
	<if test="userid != null"> 
		where USERID = #{userid}
	</if>
	</select>
	
	<!-- getEmpList : 모든 회원 정보 조회 -->
	<select id="getMemberList" resultType="com.example.hr.member.model.MemberVO">
		select USERID as userid,
				 NAME as name,
				 PASSWORD as password,
				 EMAIL as email,
				 PHONE as phone
		from member
	</select>
	
	<!-- getMemberInfo : 회원 정보 조회 -->
	<select id="getMemberInfo" parameterType="string" resultType="com.example.hr.member.model.MemberVO">
		select USERID as userid,
				 NAME as name,
				 PASSWORD as password,
				 EMAIL as email,
				 PHONE as phone
		from member
		<where>
			<if test="userid != null">
				USERID=#{userid}
			</if>
		</where>
	</select>
	
	<!-- getPassword : 비밀번호 가져오기 -->
	<select id="getPassword" parameterType="string" resultType="string">
		select PASSWORD 
		from member
		where PASSWORD=#{password}
	</select>
	
		
	<!-- updateMember : 회원 정보 수정 -->
	<update id="updateMember" parameterType="com.example.hr.member.model.MemberVO">
		update member
		set PASSWORD=#{password}
		where USERID=#{userid}
	</update>
	
	<!-- insertMember : 회원 정보 입력 -->
	<insert id="insertMember" parameterType="com.example.hr.member.model.MemberVO">
		insert into member(USERID, NAME, PASSWORD, EMAIL, PHONE) 
				values(#{userid},#{name},#{password},#{email},#{phone})
	</insert>
	
	<!-- resultType="int"로 설정했더니 서버 실행 x >> resultMap으로 써야 한다고 해서 추가... -->
<!-- 	<resultMap type="com.example.hr.member.model.MemberVO" id="memberMap">
		<result column="USERID" property="userid"/>
		<result column="NAME" property="name"/>
		<result column="PASSWORD" property="password"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
	</resultMap> -->
	
	
	<!-- deleteMember : 회원 정보 삭제 -->
	<!-- <delete id="deleteMember" parameterType="string" resultMap="memberMap"> -->
		<!-- resultType="int"로 설정했을 때 오류 발생
			delete 쿼리에서 resultType을 사용하는 것은 일반적으로 허용되지 않습니다. 
			delete 쿼리는 데이터를 삭제하고 반환할 필요가 없기 때문에 보통 resultType이나 resultMap을 사용하지 않습니다. 
			delete 쿼리의 결과는 삭제된 행의 수를 나타내는 정수이기 때문입니다. 
		-->
	<delete id="deleteMember" parameterType="string">
		delete from member
		where USERID=#{userid} and PASSWORD=#{password}
	</delete>
	
	
		
</mapper>
